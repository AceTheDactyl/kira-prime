name: CI

on:
  push:
    branches:
      - main
      - chore/**
      - feature/**
      - fix/**
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      CI: "1"
      CI_SKIP_SBERT: "1"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          fi
          pip install pytest

      - name: Run Python tests
        run: pytest -q

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Build collab-server
        working-directory: collab-server
        run: |
          npm ci
          npm run build
          npm test -- --run

      - name: Install VSCode extension deps
        working-directory: vscode-extension
        run: npm install

      - name: Build VSCode extension
        working-directory: vscode-extension
        run: npm run compile

  compose-smoke:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          fi
          pip install pytest

      - name: Show Docker and Compose versions
        run: |
          docker --version
          docker compose version

      - name: Build and start docker-compose stack
        run: docker compose up -d --build

      - name: Wait for collab server health
        run: |
          ATTEMPTS=40
          until curl -sf http://localhost:8000/health >/dev/null 2>&1; do
            ATTEMPTS=$((ATTEMPTS-1))
            if [ $ATTEMPTS -le 0 ]; then
              echo "Collab server did not become healthy" >&2
              docker compose ps
              exit 1
            fi
            sleep 3
          done

      - name: Run collab smoke test
        env:
          COLLAB_SMOKE_ENABLED: "1"
        run: pytest -q tests/test_collab_server.py

      - name: Collab logs (on failure)
        if: failure()
        run: |
          docker compose logs collab-server || true

      - name: Tear down docker-compose
        if: always()
        run: docker compose down -v
